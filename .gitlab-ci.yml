include:
  - local: ".gitlab-ci/vars.gitlab-ci.yml"
  - local: ".gitlab-ci/rules.gitlab-ci.yml"
  - local: ".gitlab-ci/install_dependencies.gitlab-ci.yml"
  - local: ".gitlab-ci/test.gitlab-ci.yml"
  - local: ".gitlab-ci/build.gitlab-ci.yml"
  - local: ".gitlab-ci/staging.gitlab-ci.yml"
  - local: ".gitlab-ci/deploy.gitlab-ci.yml"

stages:
  - install-dependencies
  - test
  - build
  - staging
  - deploy

# Install dependencies 
npm-install-client:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_CLIENT_PATH/package-lock.json
  extends: .npm-install
  variables:
    CI_APP_PATH: $CI_CLIENT_PATH

npm-install-server:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_SERVER_PATH/package-lock.json
  extends: .npm-install
  variables:
    CI_APP_PATH: $CI_SERVER_PATH

# Unit tests
test-eslint-client:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_CLIENT_PATH/**/*
  extends: .eslint
  variables:
    CI_APP_PATH: $CI_CLIENT_PATH
  artifacts:
    when: always
    reports:
      junit:
        - $CI_CLIENT_PATH/eslint-junit.xml

test-eslint-server:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_SERVER_PATH/**/*
  extends: .eslint
  variables:
    CI_APP_PATH: $CI_SERVER_PATH
  artifacts:
    when: always
    reports:
      junit:
        - $CI_SERVER_PATH/eslint-junit.xml

test-unit-server:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_SERVER_PATH/**/*
  extends: .unit-test
  variables:
    CI_APP_PATH: $CI_SERVER_PATH
  artifacts:
    when: always
    reports:
      junit:
        - $CI_SERVER_PATH/junit.xml

test-unit-client:
  rules:
    - !reference [.rules-deps-tests, rules]
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
      changes:
        - $CI_CLIENT_PATH/**/*
  extends: .unit-test
  variables:
    CI_APP_PATH: $CI_CLIENT_PATH
  artifacts:
    when: always
    reports:
      junit:
        - $CI_CLIENT_PATH/junit.xml

## Build
build-npm-client:
  extends: .build-npm
  variables:
    CI_APP_PATH: $CI_CLIENT_PATH

build-npm-server:
  extends: .build-npm
  variables:
    CI_APP_PATH: $CI_SERVER_PATH

build-image-client:
  needs: ["build-npm-client"]
  extends: .build-image
  variables:
    CI_APP_PATH: $CI_CLIENT_PATH

build-image-server:
  needs: ["build-npm-server"]
  extends: .build-image
  variables:
    CI_APP_PATH: $CI_SERVER_PATH

build-image-postgres:
  extends: .build-image
  variables:
    CI_APP_PATH: $CI_POSTGRES_PATH

build-manifests:
  extends: .create-manifests

# == Deploy to staging and run acceptance/smoke/load tests ==
deploy-staging-env:
  extends: .deploy-test-env

run-staging-tests:
  needs: ["deploy-staging-env"]
  extends: .acc-test
  variables:
    CI_APP_PATH: $CI_SERVER_PATH

run-load-test:
  needs: ["deploy-staging-env"]
  extends: .load-test

cleanup-staging-env:
  needs: ["run-load-test", "run-staging-tests"]
  extends: .cleanup
# Deploy to production

deploy-production:
  extends: .deploy
