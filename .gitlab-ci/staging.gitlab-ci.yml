.deploy-test-env:
  stage: staging
  rules:
    - !reference [.rules-build-stage, rules]
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""] # default entry point is kubectl but we want to create the kubeconf first.
  before_script:
    - touch /.kube/config
    - echo "$K8_CONFIG" > /.kube/config
    - cat /.kube/config
  script:
    - cd helm/manifests/dev/ChattApp/templates
    - kubectl create secret docker-registry regcred --namespace="$dev_env" --docker-server="$CI_REGISTRY" --docker-username="$GIT_USERNAME" --docker-password="$GIT_TOKEN" --dry-run=client -o yaml > regcred.yaml
    - kubectl delete -f ./ --ignore-not-found
    - kubectl apply -f ./
    - kubectl wait --for=condition=Ready pods --all -n "$dev_env" --timeout=60s # Wait for all pods to be ready
  artifacts:
    paths:
      - helm/manifests
  tags:
    - $CI_RUNNER_TAG

.acc-test:
  image: node:16-alpine
  rules:
    - !reference [.rules-build-stage, rules]
  stage: staging
  script:
    - cd $CI_APP_PATH
    - ls -la
    - POSTGRES_PASSWORD=${pg_pass} npm run test:acc
  cache:
    key: "$CI_APP_PATH-$CI_COMMIT_REF_SLUG"
    paths:
      - $CI_APP_PATH/node_modules
  tags:
    - $CI_RUNNER_TAG

.cleanup:
  stage: staging
  rules:
    - !reference [.rules-build-stage, rules]
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""] # default entry point is kubectl but we want to create the kubeconf first.
  before_script:
    - touch /.kube/config
    - echo "$K8_CONFIG" > /.kube/config
    - cat /.kube/config
  script:
    - cd helm/manifests/dev/ChattApp/templates
    - ls -la
    - kubectl delete -f ./ --ignore-not-found
  tags:
    - $CI_RUNNER_TAG
