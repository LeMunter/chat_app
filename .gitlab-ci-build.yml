build-database:
  only:
    changes:
      - postgres/*
  stage: build
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay
  before_script:
    - echo IMG_REGISTRY
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build -t $IMG_REGISTRY/postgres$tag postgres/
    - docker push $IMG_REGISTRY/postgres$tag
  tags:
    - k8-runner





build-backend:
  only:
    changes:
      - server/*
  stage: build
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay
  before_script:
    - echo IMG_REGISTRY
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi

    - docker build -t $IMG_REGISTRY/koa$tag.$CI_COMMIT_SHA server/
    - docker push $IMG_REGISTRY/koa$tag
  tags:
    - k8-runner

build-frontend:
  # only:
  #   changes:
  #     - client/package.json
  image: node:16-alpine
  stage: build
  variables:
    CI: "false"
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - cd client
    - npm ci && npm cache clean --force
    - npm run build
    - ls -la
  artifacts:
    paths:
      - client/build/
  tags:
    - k8-runner

build-image-frontend:
  # only:
  #   changes:
  #     - client/*
  stage: build-img
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay
  before_script:
    - echo IMG_REGISTRY
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - echo $CI_REGISTRY_IMAGE
    - cd client
    - ls -la
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH/client:latest
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
      --label "org.opencontainers.image.version=$CI_COMMIT_BRANCH"
      --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH/client:latest
      .
    - ls -la
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH/client:latest
  dependencies:
    - build-frontend
  tags:
    - k8-runner